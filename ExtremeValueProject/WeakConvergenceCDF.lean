/-
Copyright (c) 2025 Kalle Kyt√∂l√§. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Kalle Kyt√∂l√§, ...
-/
import ExtremeValueProject.CumulativeDistributionFunction
import Mathlib

section weak_convergence_cdf

open Filter Topology NNReal ENNReal Set

/-- Lemma 4.3 (cdf-tight) in blueprint. -/
lemma CumulativeDistributionFunction.forall_pos_exists_exists_lt_gt_continuousAt
    (F : CumulativeDistributionFunction) {Œµ : ‚Ñù} (Œµ_pos : 0 < Œµ) :
    ‚àÉ (a b : ‚Ñù), a < b ‚àß F a < Œµ ‚àß 1 - Œµ < F b ‚àß ContinuousAt F a ‚àß ContinuousAt F b := by
  sorry -- **Issue #15**

/-- Lemma 4.4 (subdivision-dense) in blueprint:
An interval `[a,b]` can be subdivided with points from a dense set so that the consecutive
differences are smaller than a given `Œ¥ > 0`. -/
lemma forall_exists_subdivision_diff_lt_of_dense {D : Set ‚Ñù} (D_dense : Dense D)
    {a b : ‚Ñù} (ha : a ‚àà D) (hb : b ‚àà D) (a_lt_b : a < b) {Œ¥ : ‚Ñù} (Œ¥_pos : 0 < Œ¥) :
    ‚àÉ (k : ‚Ñï) (cs : Fin (k + 1) ‚Üí ‚Ñù),
      (cs 0 = a) ‚àß (cs (Fin.last _) = b) ‚àß (Monotone cs) ‚àß (‚àÄ k, cs k ‚àà D) ‚àß
      (‚àÄ (j : Fin k), cs j.succ - cs j < Œ¥) := by
  sorry -- **Issue #16**

/-- Lemma 4.5 (continuous-function-approximation-subdivision) in blueprint:
An interval `[a,b]` can be subdivided with points from a dense set so that for a given
continuous function `f` the function values on the parts of the subdivision are smaller than
a given `Œµ > 0`. -/
lemma forall_exists_subdivision_dist_apply_lt_of_dense_of_continuous {D : Set ‚Ñù} (D_dense : Dense D)
    {f : ‚Ñù ‚Üí ‚Ñù} (f_cont : Continuous f) {a b : ‚Ñù} (ha : a ‚àà D) (hb : b ‚àà D) (a_lt_b : a < b)
    {Œµ : ‚Ñù} (Œµ_pos : 0 < Œµ) :
    ‚àÉ (k : ‚Ñï) (cs : Fin (k + 1) ‚Üí ‚Ñù),
      (cs 0 = a) ‚àß (cs (Fin.last _) = b) ‚àß (Monotone cs) ‚àß (‚àÄ k, cs k ‚àà D) ‚àß
      (‚àÄ (j : Fin k), ‚àÄ x ‚àà Icc (cs j) (cs j.succ), ‚àÄ y ‚àà Icc (cs j) (cs j.succ),
        dist (f x) (f y) < Œµ) := by
  sorry -- **Issue #17**

/-- Preliminary to Lemma 4.6 (simple-integral-cdf-difference) in blueprint. -/
lemma CumulativeDistributionFunction.integral_indicator_eq (F : CumulativeDistributionFunction)
    {E : Type*} [NormedAddCommGroup E] [NormedSpace ‚Ñù E]
    {Œ∫ : Type*} {s : Finset Œ∫} {a b : ‚Ñù} (a_le_b : a ‚â§ b) (Œ± : E) :
    ‚à´ x, (indicator (Ioc a b) (fun _ ‚Ü¶ Œ±)) x ‚àÇ F.measure =
      (F b - F a) ‚Ä¢ Œ± := by
  sorry -- **Issue #18**

/-- Lemma 4.6 (simple-integral-cdf-difference) in blueprint. -/
lemma CumulativeDistributionFunction.integral_sum_indicator_eq (F : CumulativeDistributionFunction)
    {E : Type*} [NormedAddCommGroup E] [NormedSpace ‚Ñù E]
    {Œ∫ : Type*} {s : Finset Œ∫} (as : Œ∫ ‚Üí ‚Ñù) (bs : Œ∫ ‚Üí ‚Ñù) (h : ‚àÄ j, as j ‚â§ bs j) (Œ± : Œ∫ ‚Üí E) :
    ‚à´ x, ((‚àë j ‚àà s, indicator (Ioc (as j) (bs j)) (fun _ ‚Ü¶ Œ± j)) x) ‚àÇ F.measure =
      ‚àë j in s, (F (bs j) - F (as j)) ‚Ä¢ Œ± j := by
  -- It may be worthwhile to think about an improved phrasing of this.
  -- The previous lemma `CumulativeDistributionFunction.integral_indicator_eq` should be
  -- the key anyway.
  sorry -- **Issue #18**

open MeasureTheory Topology

#check ProbabilityMeasure.tendsto_measure_of_null_frontier_of_tendsto

/-- Lemma 4.7 (cdf-convergence-from-convergence-in-distribution) in blueprint:
Convergence in distribution of a sequence of Borel probability measures on `‚Ñù` implies that the
corresponding c.d.f.s converge pointwise at all continuity points of the limit c.d.f. -/
theorem forall_continuousAt_tendsto_cdf_of_tendsto
    (Œºs : ‚Ñï ‚Üí ProbabilityMeasure ‚Ñù) (Œº : ProbabilityMeasure ‚Ñù)
    (h : Tendsto Œºs atTop (ùìù Œº)) {x : ‚Ñù} (hx : ContinuousAt Œº.cdf x) :
    Tendsto (fun n ‚Ü¶ (Œºs n).cdf x) atTop (ùìù (Œº.cdf x)) := by
  -- The key lemma is `MeasureTheory.ProbabilityMeasure.tendsto_measure_of_null_frontier_of_tendsto`
  sorry -- **Issue #19**

/-- Theorem 4.8 (convergence-in-distribution-with-cdf) in blueprint:
Convergence of a sequence of c.d.f.s pointwise at all continuity points of the limit c.d.f. imply
convergence in distribution of the corresponding Borel probability measures on `‚Ñù`. -/
theorem tendsto_of_forall_continuousAt_tendsto_cdf
    (Œºs : ‚Ñï ‚Üí ProbabilityMeasure ‚Ñù) (Œº : ProbabilityMeasure ‚Ñù)
    (h : ‚àÄ x, ContinuousAt Œº.cdf x ‚Üí Tendsto (fun n ‚Ü¶ (Œºs n).cdf x) atTop (ùìù (Œº.cdf x))) :
    Tendsto Œºs atTop (ùìù Œº) := by
  sorry -- **Issue #20** (a big one)

end weak_convergence_cdf
